{
	"info": {
		"_postman_id": "swift-eats-api-collection",
		"name": "Swift Eats API",
		"description": "Complete Postman collection for testing the Swift Eats Food Delivery Platform API endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "swift-eats-api"
	},
	"item": [
		{
			"name": "Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/health",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"health"
					]
				},
				"description": "Check if the API server is running and healthy"
			},
			"response": []
		},
		{
			"name": "API Documentation",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/{{api_version}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"{{api_version}}"
					]
				},
				"description": "Get API documentation and available endpoints"
			},
			"response": []
		},
		{
			"name": "Restaurants",
			"item": [
				{
					"name": "Get Restaurants by Location",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/restaurants?location={{customer_lat}},{{customer_lng}}&radius={{search_radius}}&cuisine={{cuisine_type}}&limit={{limit}}&offset={{offset}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"{{api_version}}",
								"restaurants"
							],
							"query": [
								{
									"key": "location",
									"value": "{{customer_lat}},{{customer_lng}}",
									"description": "Customer location in format: latitude,longitude"
								},
								{
									"key": "radius",
									"value": "{{search_radius}}",
									"description": "Search radius in kilometers"
								},
								{
									"key": "cuisine",
									"value": "{{cuisine_type}}",
									"description": "Cuisine type filter (optional)"
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "Number of results to return"
								},
								{
									"key": "offset",
									"value": "{{offset}}",
									"description": "Number of results to skip"
								}
							]
						},
						"description": "Get restaurants near a specific location with optional cuisine filtering"
					},
					"response": []
				},
				{
					"name": "Get Restaurant by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/restaurants/{{restaurant_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"{{api_version}}",
								"restaurants",
								"{{restaurant_id}}"
							]
						},
						"description": "Get detailed information about a specific restaurant"
					},
					"response": []
				},
				{
					"name": "Get Restaurant Menu",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/restaurants/{{restaurant_id}}/menu",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"{{api_version}}",
								"restaurants",
								"{{restaurant_id}}",
								"menu"
							]
						},
						"description": "Get the complete menu for a specific restaurant"
					},
					"response": []
				}
			],
			"description": "Restaurant-related endpoints for browsing and searching"
		},
		{
			"name": "Food Items",
			"item": [
				{
					"name": "Get Food Item by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/food-items/{{food_item_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"{{api_version}}",
								"food-items",
								"{{food_item_id}}"
							]
						},
						"description": "Get detailed information about a specific food item"
					},
					"response": []
				}
			],
			"description": "Food item-related endpoints"
		},
		{
			"name": "Search",
			"item": [
				{
					"name": "Search Restaurants and Food Items",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerLocation\": {\n    \"latitude\": {{customer_lat}},\n    \"longitude\": {{customer_lng}}\n  },\n  \"foodItem\": \"{{search_food_item}}\",\n  \"radius\": {{search_radius}},\n  \"cuisine\": \"{{cuisine_type}}\",\n  \"dietary\": \"{{dietary_preference}}\",\n  \"maxPrice\": {{max_price}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/search",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"{{api_version}}",
								"search"
							]
						},
						"description": "Advanced search across restaurants and food items with multiple criteria"
					},
					"response": []
				}
			],
			"description": "Search functionality for finding restaurants and food items"
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "Get Customer Orders",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/orders?customerId={{customer_id}}&status={{order_status}}&limit={{limit}}&offset={{offset}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"{{api_version}}",
								"orders"
							],
							"query": [
								{
									"key": "customerId",
									"value": "{{customer_id}}",
									"description": "Customer ID (must match authenticated user)"
								},
								{
									"key": "status",
									"value": "{{order_status}}",
									"description": "Filter by order status (optional)"
								},
								{
									"key": "limit",
									"value": "{{limit}}",
									"description": "Number of results to return"
								},
								{
									"key": "offset",
									"value": "{{offset}}",
									"description": "Number of results to skip"
								}
							]
						},
						"description": "Get orders for the authenticated customer with optional status filtering"
					},
					"response": []
				},
				{
					"name": "Create New Order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"destination\": {\n    \"latitude\": {{delivery_lat}},\n    \"longitude\": {{delivery_lng}}\n  },\n  \"restaurant\": \"{{restaurant_id}}\",\n  \"items\": [\n    {\n      \"id\": \"{{food_item_id}}\",\n      \"name\": \"{{food_item_name}}\",\n      \"quantity\": {{quantity}},\n      \"price\": {{price}},\n      \"specialInstructions\": \"{{special_instructions}}\"\n    }\n  ],\n  \"specialInstructions\": \"{{order_special_instructions}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/orders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"{{api_version}}",
								"orders"
							]
						},
						"description": "Create a new order with multiple food items"
					},
					"response": []
				},
				{
					"name": "Get Order by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/orders/{{order_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"{{api_version}}",
								"orders",
								"{{order_id}}"
							]
						},
						"description": "Get detailed information about a specific order"
					},
					"response": []
				},
				{
					"name": "Update Order Status",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"{{new_status}}\",\n  \"driverId\": \"{{driver_id}}\",\n  \"estimatedDeliveryTime\": \"{{estimated_delivery_time}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/orders/{{order_id}}/status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"{{api_version}}",
								"orders",
								"{{order_id}}",
								"status"
							]
						},
						"description": "Update the status of an existing order"
					},
					"response": []
				}
			],
			"description": "Order management endpoints for creating and tracking orders"
		},
		{
			"name": "Tracking",
			"item": [
				{
					"name": "Get Order Tracking",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/tracking/{{order_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"{{api_version}}",
								"tracking",
								"{{order_id}}"
							]
						},
						"description": "Get real-time tracking information for an order"
					},
					"response": []
				},
				{
					"name": "Get Driver Location",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/tracking/{{order_id}}/driver-location",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"{{api_version}}",
								"tracking",
								"{{order_id}}",
								"driver-location"
							]
						},
						"description": "Get the current location of the driver assigned to an order"
					},
					"response": []
				},
				{
					"name": "Get Order ETA",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/{{api_version}}/tracking/{{order_id}}/eta",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"{{api_version}}",
								"tracking",
								"{{order_id}}",
								"eta"
							]
						},
						"description": "Get estimated delivery time for an order"
					},
					"response": []
				}
			],
			"description": "Real-time tracking endpoints for order monitoring"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-generate UUIDs if not set",
					"if (!pm.environment.get('restaurant_id')) {",
					"    pm.environment.set('restaurant_id', pm.variables.replaceIn('{{$guid}}'));",
					"}",
					"if (!pm.environment.get('food_item_id')) {",
					"    pm.environment.set('food_item_id', pm.variables.replaceIn('{{$guid}}'));",
					"}",
					"if (!pm.environment.get('order_id')) {",
					"    pm.environment.set('order_id', pm.variables.replaceIn('{{$guid}}'));",
					"}",
					"if (!pm.environment.get('customer_id')) {",
					"    pm.environment.set('customer_id', pm.variables.replaceIn('{{$guid}}'));",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Common test script for all requests",
					"pm.test(\"Status code is 200 or 201\", function () {",
					"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
					"});",
					"",
					"pm.test(\"Response has required structure\", function () {",
					"    const responseJson = pm.response.json();",
					"    pm.expect(responseJson).to.be.an('object');",
					"});",
					"",
					"pm.test(\"Response time is less than 200ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(200);",
					"});",
					"",
					"// Store IDs from responses for subsequent requests",
					"if (pm.response.code === 201 && pm.request.url.path.includes('orders')) {",
					"    const responseJson = pm.response.json();",
					"    if (responseJson._id) {",
					"        pm.environment.set('order_id', responseJson._id);",
					"    }",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "api_version",
			"value": "v1",
			"type": "string"
		},
		{
			"key": "auth_token",
			"value": "your_jwt_token_here",
			"type": "string"
		},
		{
			"key": "customer_lat",
			"value": "40.7128",
			"type": "string"
		},
		{
			"key": "customer_lng",
			"value": "-74.0060",
			"type": "string"
		},
		{
			"key": "search_radius",
			"value": "10",
			"type": "string"
		},
		{
			"key": "cuisine_type",
			"value": "italian",
			"type": "string"
		},
		{
			"key": "limit",
			"value": "20",
			"type": "string"
		},
		{
			"key": "offset",
			"value": "0",
			"type": "string"
		},
		{
			"key": "restaurant_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "food_item_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "order_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "customer_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "search_food_item",
			"value": "pizza",
			"type": "string"
		},
		{
			"key": "dietary_preference",
			"value": "veg",
			"type": "string"
		},
		{
			"key": "max_price",
			"value": "25",
			"type": "string"
		},
		{
			"key": "delivery_lat",
			"value": "40.7128",
			"type": "string"
		},
		{
			"key": "delivery_lng",
			"value": "-74.0060",
			"type": "string"
		},
		{
			"key": "food_item_name",
			"value": "Margherita Pizza",
			"type": "string"
		},
		{
			"key": "quantity",
			"value": "2",
			"type": "string"
		},
		{
			"key": "price",
			"value": "18.99",
			"type": "string"
		},
		{
			"key": "special_instructions",
			"value": "Extra cheese please",
			"type": "string"
		},
		{
			"key": "order_special_instructions",
			"value": "Ring doorbell twice",
			"type": "string"
		},
		{
			"key": "order_status",
			"value": "active",
			"type": "string"
		},
		{
			"key": "new_status",
			"value": "assigned_driver",
			"type": "string"
		},
		{
			"key": "driver_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "estimated_delivery_time",
			"value": "2024-01-15T20:30:00Z",
			"type": "string"
		}
	]
}
